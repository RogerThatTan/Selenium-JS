{
  "stats": {
    "suites": 3,
    "tests": 4,
    "passes": 3,
    "pending": 0,
    "failures": 1,
    "start": "2025-05-24T07:35:05.459Z",
    "end": "2025-05-24T07:35:15.578Z",
    "duration": 10119,
    "testsRegistered": 4,
    "passPercent": 75,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "b5170024-6978-4dad-87a7-5812966a0adc",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4c681171-ca07-4e21-91c5-b083262fc250",
          "title": "add todo test",
          "fullFile": "C:\\Users\\xtanv\\OneDrive\\Desktop\\Selenium-JS\\tests\\parallel_firstTest.js",
          "file": "\\tests\\parallel_firstTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "successfully adds a todo",
              "fullTitle": "add todo test successfully adds a todo",
              "timedOut": null,
              "duration": 5017,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//launch the browser\nlet driver = await new Builder().forBrowser('firefox').build();\n//navigate to our application\nawait driver.get('https://lambdatest.github.io/sample-todo-app/');\n//add a todo\nawait driver\n  .findElement(By.id('sampletodotext'))\n  .sendKeys('Selenium Testing', Key.RETURN);\n//assert\n//find the last element in the list and get its text\nlet todoText = await driver\n  .findElement(By.xpath('//li[last()]'))\n  .getText()\n  .then(function (value) {\n    return value;\n  });\n//assert using chai assertion\ntodoText.should.equal('Selenium Testing');\n//close the browser\nawait driver.quit();",
              "err": {},
              "uuid": "cfcbf760-39a4-4c31-8503-d7cb6b52afc1",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cfcbf760-39a4-4c31-8503-d7cb6b52afc1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5017,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "39a997e6-a3cb-492c-a0a5-2300ccf317c0",
          "title": "add ttodo test",
          "fullFile": "C:\\Users\\xtanv\\OneDrive\\Desktop\\Selenium-JS\\tests\\mochTest.js",
          "file": "\\tests\\mochTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "successfully adds a todo",
              "fullTitle": "add ttodo test successfully adds a todo",
              "timedOut": null,
              "duration": 6065,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//launch the browser\nlet driver = await new Builder().forBrowser('firefox').build();\n//navigate to our application\nawait driver.get('https://lambdatest.github.io/sample-todo-app/');\n//add a todo\nawait driver\n  .findElement(By.id('sampletodotext'))\n  .sendKeys('Selenium Testing', Key.RETURN);\n//assert\n//find the last element in the list and get its text\nlet todoText = await driver\n  .findElement(By.xpath('//li[last()]'))\n  .getText()\n  .then(function (value) {\n    return value;\n  });\n//assert using chai assertion\ntodoText.should.equal('Selenium Testing');\n//close the browser\nawait driver.quit();",
              "err": {},
              "uuid": "0822d03b-e198-49f7-b7b5-b418331d90ec",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0822d03b-e198-49f7-b7b5-b418331d90ec"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6065,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "e11730dc-a20b-45f5-b385-ed063a58436e",
          "title": "add another todo test",
          "fullFile": "C:\\Users\\xtanv\\OneDrive\\Desktop\\Selenium-JS\\tests\\parallel_secondTest.js",
          "file": "\\tests\\parallel_secondTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "successfully adds another a todo",
              "fullTitle": "add another todo test successfully adds another a todo",
              "timedOut": null,
              "duration": 6846,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//launch the browser\nlet driver = await new Builder().forBrowser('firefox').build();\n//navigate to our application\nawait driver.get('https://lambdatest.github.io/sample-todo-app/');\n//add a todo\nawait driver\n  .findElement(By.id('sampletodotext'))\n  .sendKeys('Selenium Testing 2', Key.RETURN);\n//assert\n//find the last element in the list and get its text\nlet todoText = await driver\n  .findElement(By.xpath('//li[last()]'))\n  .getText()\n  .then(function (value) {\n    return value;\n  });\n//assert using chai assertion\ntodoText.should.equal('Selenium Testing 2');\n//close the browser\nawait driver.quit();",
              "err": {},
              "uuid": "69523a9f-c8d6-4269-8c78-41289241f323",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Adding a new test for reporting",
              "fullTitle": "add another todo test Adding a new test for reporting",
              "timedOut": null,
              "duration": 2975,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "//launch the browser\nlet driver = await new Builder().forBrowser('firefox').build();\n//navigate to our application\nawait driver.get('https://lambdatest.github.io/sample-todo-app/');\n//add a todo\nawait driver\n  .findElement(By.id('sampletodotext'))\n  .sendKeys('Selenium Testing 2', Key.RETURN);\n//assert\n//find the last element in the list and get its text\nlet todoText = await driver\n  .findElement(By.xpath('//li[last()]'))\n  .getText()\n  .then(function (value) {\n    return value;\n  });\n//assert using chai assertion\ntodoText.should.equal('Selenium Testing 3');\n//close the browser\nawait driver.quit();",
              "err": {
                "message": "AssertionError: expected 'Selenium Testing 2' to equal 'Selenium Testing 3'",
                "estack": "AssertionError: expected 'Selenium Testing 2' to equal 'Selenium Testing 3'\n    at Context.<anonymous> (tests\\parallel_secondTest.js:62:21)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)",
                "diff": "- Selenium Testing 2\n+ Selenium Testing 3\n"
              },
              "uuid": "bafd7949-8eeb-4439-9135-992709dc6336",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "69523a9f-c8d6-4269-8c78-41289241f323"
          ],
          "failures": [
            "bafd7949-8eeb-4439-9135-992709dc6336"
          ],
          "pending": [],
          "skipped": [],
          "duration": 9821,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "11.5.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "C:/Users/xtanv/OneDrive/Desktop/Selenium-JS/testReports",
        "reportFilename": "report"
      },
      "version": "6.2.0"
    }
  }
}